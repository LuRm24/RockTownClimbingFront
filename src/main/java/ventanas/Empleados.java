/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import conexion.ConexionCliente;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;
import com.google.gson.JsonObject;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luciarodriguezmartin
 */
public class Empleados extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public Empleados() {
        initComponents();
        cargarEmpleados();
    }
    
    private void cargarDatosTabla(BufferedReader entrada) {
        try {
            //Definir las columnas de la tabla
            String[] columnas = {"Nombre", "Apellidos", "Direccion", "DNI", "Email", "Usuario", "Rol", "Id"};
            DefaultTableModel model = new DefaultTableModel(columnas, 0);
            String datosLeidos = entrada.readLine();
            
            //Si la entrada tiene datos
            if (datosLeidos.equals("Datos vacios") == false){
            
                if (datosLeidos.startsWith("[")) {
                    // Parsear como JsonArray
                    JsonArray jsonArray = JsonParser.parseString(datosLeidos).getAsJsonArray();

                    //Recorrer el json e ir añadiendo las filas
                    for (int i = 0; i < jsonArray.size(); i++) {
                        JsonObject obj = jsonArray.get(i).getAsJsonObject();

                        //Añadimos los datos de la fila en un array
                        String[] datos = {obj.get("nombre").getAsString(), obj.get("apellidos").getAsString(),
                        obj.get("direccion").getAsString(), obj.get("dni").getAsString(),
                        obj.get("email").getAsString(), obj.get("nombreUsuario").getAsString(),obj.get("rol").getAsString(),
                        obj.get("id").getAsString()};
                        //Al modelo le añadimos los datos como una fila
                        model.addRow(datos); 
                    }
                }
                else {
                    JsonObject obj = JsonParser.parseString(datosLeidos).getAsJsonObject();

                    //Añadimos los datos de la fila en un array
                    String[] datos = {obj.get("nombre").getAsString(), obj.get("apellidos").getAsString(),
                    obj.get("direccion").getAsString(), obj.get("dni").getAsString(),
                    obj.get("email").getAsString(), obj.get("nombreUsuario").getAsString(),obj.get("rol").getAsString(),
                    obj.get("id").getAsString()};
                    //Al modelo le añadimos los datos como una fila
                    model.addRow(datos); 
                }
            }
            
            //A la tabla se le asigna el modelo
            tablaEmpleados.setModel(model);
        }
        catch (IOException io){
            io.printStackTrace();
        }
    }

    private void cargarEmpleados() {
        try {
            //Recuperar el socket por el que se conectó el cliente
            Socket socket = ConexionCliente.getSocket();
            //Le envia al servidor el tipo de peticion
            PrintWriter salida = new PrintWriter(socket.getOutputStream(), true);
            salida.println("CargarEmpleados");
           
            //El servidor le contesta con la lista de empleados
            BufferedReader entrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            cargarDatosTabla(entrada); 
        }
        catch (IOException io){
            io.printStackTrace();
        }
    }
    
    private void limpiarBusqueda() {
        TFDNI.setText("");
        TFApellidos.setText("");
        TFUsuario.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAlta = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TFApellidos = new javax.swing.JTextField();
        TFUsuario = new javax.swing.JTextField();
        TFDNI = new javax.swing.JTextField();
        jButtonBaja1 = new javax.swing.JButton();
        jButtonBaja2 = new javax.swing.JButton();
        jButtonRecargar = new javax.swing.JButton();
        jButtonMenuPrinc = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Rol", "DNI", "Dirección", "Email", "Nombre Usuario"
            }
        ));
        tablaEmpleados.setOpaque(false);
        jScrollPane1.setViewportView(tablaEmpleados);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 770, 220));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, -1, -1));

        jButtonAlta.setText("Nuevo empleado");
        jButtonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAltaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 30));

        jLabel2.setText("Nombre Usuario");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, -1));

        jLabel3.setText("DNI");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        jLabel4.setText("Apellido");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        TFApellidos.setEnabled(false);
        TFApellidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TFApellidosMouseClicked(evt);
            }
        });
        jPanel1.add(TFApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 170, -1));

        TFUsuario.setEnabled(false);
        TFUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TFUsuarioMouseClicked(evt);
            }
        });
        jPanel1.add(TFUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 170, -1));

        TFDNI.setEnabled(false);
        TFDNI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TFDNIMouseClicked(evt);
            }
        });
        jPanel1.add(TFDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 170, -1));

        jButtonBaja1.setText("Eliminar empleado");
        jButtonBaja1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaja1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBaja1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, 30));

        jButtonBaja2.setText("Modificar Empleado");
        jButtonBaja2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaja2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBaja2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jButtonRecargar.setText("<--");
        jButtonRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecargarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRecargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 70, -1));

        jButtonMenuPrinc.setText("Menú Principal");
        jButtonMenuPrinc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuPrincActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonMenuPrinc, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 770, 130));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoPrincipal.png"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 600));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        if (TFDNI.getText().equals("") && TFApellidos.getText().equals("") && TFUsuario.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Introducir un parámetro de búsqueda");
        }
        else {
            try {
                //Recuperar el socket por el que se conectó el cliente
                Socket socket = ConexionCliente.getSocket();
                //Le envia al servidor el tipo de peticion
                PrintWriter salida = new PrintWriter(socket.getOutputStream(), true);
                salida.println("BuscarEmpleado");
                //Le enviamos al servidor los datos;
                salida.println(TFDNI.getText());
                salida.println(TFApellidos.getText());
                salida.println(TFUsuario.getText());
                
                //El servidor le contesta con la lista de empleados
                BufferedReader entrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                cargarDatosTabla(entrada);
            }
            catch (IOException io) {
                io.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonBaja1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaja1ActionPerformed
        // TODO add your handling code here:
        //Guardamos la fila seleccionada
        int fila = tablaEmpleados.getSelectedRow();
        
        //Si no se selecciona ninguna fila
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccionar empleado a eliminar");
        }
        else {
            try{
                //Pedir confirmación para el borrado
                int opcion = JOptionPane.showConfirmDialog(this, "¿Deseas borrar el empleado?", "Confirmar borrado", JOptionPane.YES_NO_OPTION);
                
                if (opcion == 0){
                
                    //Recuperar el socket por el que se conectó el cliente
                    Socket socket = ConexionCliente.getSocket();
                    //Le envia al servidor el tipo de peticion
                    PrintWriter salida = new PrintWriter(socket.getOutputStream(), true);
                    salida.println("EliminarEmpleado");
                    //Le enviamos al servidor los datos;
                    salida.println(tablaEmpleados.getValueAt(fila, 7));

                   //El servidor le contesta si ha podido eliminar el empleado y se abre la ventana principal
                    BufferedReader entrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));

                    if (entrada.readLine().equals("true")) {
                        JOptionPane.showMessageDialog(this, "Empleado eliminado correctamente");
                        cargarEmpleados();
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al eliminar el empleado");
                    }
                }
            }
            catch (IOException io) {
                io.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonBaja1ActionPerformed

    private void jButtonBaja2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaja2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBaja2ActionPerformed

    private void jButtonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAltaActionPerformed
        AltaEmpleado altaEmp = new AltaEmpleado();
        altaEmp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonAltaActionPerformed

    private void TFDNIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TFDNIMouseClicked
        // TODO add your handling code here:
        TFDNI.setEnabled(true);
        TFApellidos.setEnabled(false);
        TFUsuario.setEnabled(false);
        limpiarBusqueda();
    }//GEN-LAST:event_TFDNIMouseClicked

    private void TFApellidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TFApellidosMouseClicked
        // TODO add your handling code here:
        TFDNI.setEnabled(false);
        TFApellidos.setEnabled(true);
        TFUsuario.setEnabled(false);
        limpiarBusqueda();
    }//GEN-LAST:event_TFApellidosMouseClicked

    private void TFUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TFUsuarioMouseClicked
        // TODO add your handling code here:
        TFDNI.setEnabled(false);
        TFApellidos.setEnabled(false);
        TFUsuario.setEnabled(true);
        limpiarBusqueda();
    }//GEN-LAST:event_TFUsuarioMouseClicked

    private void jButtonRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecargarActionPerformed
        // TODO add your handling code here:
        cargarEmpleados();
    }//GEN-LAST:event_jButtonRecargarActionPerformed

    private void jButtonMenuPrincActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuPrincActionPerformed
        // TODO add your handling code here:
        Principal p = new Principal();
        p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonMenuPrincActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Empleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TFApellidos;
    private javax.swing.JTextField TFDNI;
    private javax.swing.JTextField TFUsuario;
    private javax.swing.JButton jButtonAlta;
    private javax.swing.JButton jButtonBaja1;
    private javax.swing.JButton jButtonBaja2;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonMenuPrinc;
    private javax.swing.JButton jButtonRecargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables
}
